generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id               String           @id @default(uuid())
  name             String
  grammy           Boolean
  albums           Album[]
  tracks           Track[]
  favoriteArtist   FavoriteArtists? @relation(fields: [favoriteArtistId], references: [id])
  favoriteArtistId String?
}

model Album {
  id              String          @id @default(uuid())
  name            String
  year            Int
  artistId        String?
  artist          Artist?         @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks          Track[]
  favoriteAlbum   FavoriteAlbums? @relation(fields: [favoriteAlbumId], references: [id])
  favoriteAlbumId String?
}

model Track {
  id              String          @id @default(uuid())
  name            String
  duration        Int
  artist          Artist?         @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId        String?         @unique
  album           Album?          @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId         String?         @unique
  favoriteTrack   FavoriteTracks? @relation(fields: [favoriteTrackId], references: [id], onDelete: Cascade)
  favoriteTrackId String?
}

model FavoriteArtists {
  id      String   @id @default(uuid())
  artists Artist[]
}

model FavoriteAlbums {
  id     String  @id @default(uuid())
  albums Album[]
}

model FavoriteTracks {
  id     String  @id @default(uuid())
  tracks Track[]
}
